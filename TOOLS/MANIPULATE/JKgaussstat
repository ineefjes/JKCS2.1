#!/bin/bash
############################################################
## JAKUB KUBECKA 2018                                     ##
## Program for analysis of gaussian output                ##
## To understand program run help:                        ##
##        JKgaussstat -help                               ##
############################################################
## "Never vomit on your colleagues. Let say that it is    ##
## not profesional colaboration."        Jakub Kubecka    ##
############################################################

### THIS IS HELP
function help {
  echo "THIS IS HELP:"
  echo "Program for analysis of gaussian output"
  echo """
  JKgaussstat [OPTIONS] [FILES]
  OPTIONS:
   -help .......... print this help and exit
 
   -name .......... print name of the file *
   -p,-pwdname .... print full file path *
   -b,-basename ... print basename of the file (___.log) *

   -el,-elen ...... EL = (last) electronic energy (SCF Done)
   -zpe,-ZPE ...... ZPE = zero-point energy (correction)
   -g,-gibbs ...... G = Gibbs Free Energy (293.15 K) *
   -gh,-gibbsh .... Gh = Gibbs Free Energy (293.15 K) (GoodVibes)  
   -gc,-gcorr ..... dGcorr = Gibbs Free Energy (293.15 K) correction
   -gch,-gcorrh ... dGcorrh = Gibbs Free Energy (293.15 K) correction (GoodVibes)

   -dlpno ......... DLPNO = electronic energy from .out (orca output)
   -GD ............ DLPNO-G = DLPNO + dGcorr
   -GDh ........... DLPNO-Gh = DLPNO + dGcorrh (GoodVibes)

   -h,-enthalpy ... H = enthalpy energy
   -HD, -hdlpno ... DLPNO-H = DLPNO - EL + H
   -s,-entropy .... S = total entropy (hartree/K units)
   -sh,-entropyh .. Sh = total entropy (hartree/K units) (GoodVibes)
   -Us,-Uentropy .. S = total entropy (cal/(mol.K) units)
   -Ush,-Uentropyh  Sh = total entropy (cal/(mol.K) units) (GoodVibes)

   -rx,-ry,-rz .... print rotational constant in 1 axis
   -r2 ............ calculate squared rotational constant

   -dx,-dy,-dz .... print dipole moment in 1 axis (dy=0,dx=0) [Debye]
   -d,-dtot ....... calculate total dipole moment = dz [Debye]
   -pol ........... print total polarizability [Angstrom^3] 
 
   -T,-temp \"X\" ... asumming temperature X in Kelvin (GoodVibes is used for other
                                                    variables: -h,-s,-HD,-g ...)
   -v \"X\" ......... anharmonicity scaling factor (GoodVibes is used for other
                                                    variables: -h,-s,-HD,-g ...)

   -t,-time ....... time in minutes # PRINT JUST LAST TIME 
   -err ........... do not print for missing \"Normal termination\"
   [OTHERS: -nt, -gibbscorr|-gcorr|-gc]
   * = XTB compatible
  FILES:
   gaussian (G16) output is expected
  EXAMPLES:
     JKgaussstat
     JKgaussstat -basename -rx -ry -rz -elen 1.log 2log
     JKgaussstat -name -elen
     JKgaussstat -basename -elen *.log
  """
  exit
}
### PREPARING WHAT AND HOW

# locate TOOLS path and load programs (GoodVibes)
scriptpath="$( cd "$(dirname "$0")" ; pwd -P )"
if [ -e $scriptpath/JKgoodvibes ]
then
  toolspath="$scriptpath"
else
  toolspath="$scriptpath/../PROGRAM_SCRIPTS"
fi
Qprograms=programs.txt
if [ -e $toolspath/../$Qprograms ]
then
  source $toolspath/../$Qprograms
fi


######
Qerr=0
Qfreqerr=0
QT=0
temp=298.15
factor=1.0
what=""
how=""
next=0
input=`echo $*`
for i in $input
do
  if [ "$i" == "-help" ] || [ "$i" == "--help" ]; then help;fi
  firstletter=`echo $i | cut -c 1`
  if [ "$firstletter" == "-" ] || [ $next -eq 1 ]
  then
    if [ "$i" == "-err" ]
    then 
      Qerr=1
      continue
    fi
    # TEMP
    if [ "$last" == "-temp" ]
    then
      QT=1
      temp="$i"
      last=""
      next=0
      continue
    fi
    if [ "$i" == "-T" ] || [ "$i" == "-temp" ] || [ "$i" == "-Temp" ] || [ "$i" == "-TEMP" ]
    then
      last="-temp"
      next=1
      continue
    fi
    # FACTOR
    if [ "$last" == "-v" ]
    then
      QT=1
      factor="$i"
      last=""
      next=0
      continue
    fi
    if [ "$i" == "-v" ] 
    then
      last="-v"
      next=1
      continue
    fi
    ### NOTHING FROM ABOVE
    how+="$i "
    if [ "$i" == "-gibbs" ] || [ "$i" == "-g" ]
    then 
      Qfreqerr=1
      continue
    fi
  else #INPUT files 
    what+="$i "
  fi
done

if [ -z "$what" ]; then what=`ls *.log`;fi
if [ -z "$how"  ]; then how="-name -elen -gibbs";fi

function JKgrep {
  file=$1
  text=$2
  column=$3
  if [ -e $file ]
  then
    test=`grep -c "$text" $file`
  else 
    echo ""
  fi
}

### LOOP OVER FILES
for i in $what
do
  ### WHO AM I? ###
  iEND=`echo $i | rev | cut -c-4 | rev`
  iBASE=$(basename $i $iEND)
  iXYZ=$iBASE.xyz 
  iLOG=$iBASE.log
  iOUT=$iBASE.out
  if [ "$iEND" == ".xyz" ]
  then 
    ip="XYZ"
  elif [ "$iEND" == ".out" ]
  then
    ip="ORCA"
  elif [ "$iEND" == ".log" ]
  then
    test1=`grep -c "     |                           x T B                           |" $i`
    test2=`grep -c " the Gaussian(R) 03 system (copyright 2003, Gaussian, Inc.)," $i` #Gaussians are based on this version
    if [ $test1 -gt 0 ]
    then
      ip="XTB"
    elif [ $test2 -gt 0 ]
    then
      ip="G16"
    else 
      echo ERROR to read $i
      continue
    fi   
  else
    echo ERROR to read $i
    continue
  fi
  ###
  output=""
  ### CHECK ERRORS
  if [ $Qerr -eq 1 ]
  then
    number=`grep -c "Normal termination" $i`
    min=1
    if [ $Qfreqerr -eq 1 ]
    then
      min=2
    fi
    if [ $number -lt $min ] 
    then
      continue
    fi 
  fi
  ### LOOP OVER HOW
  for j in $how
  do
    var=""
    ############    
    ### NAME ###
    ############
    if [ $j == "-name" ] || [ $j == "-n" ]
    then 
      var=$i
      output+="$var    \t"
      continue
    fi
    ################
    ### BASENAME ###
    ################
    if [ $j == "-basename" ] || [ $j == "-b" ]
    then
      var=$iBASE;
      output+="$var    \t"
      continue
    fi    
    ###############
    ### PWDNAME ###
    ###############
    if [ $j == "-pwdname" ] || [ $j == "-p" ]
    then
      var="$( cd "$(dirname "$i")" ; pwd -P )"/$i;
      output+="$var    \t"
      continue
    fi
    ############
    ### ELEN ###
    ############
    if [ $j == "-elen" ] || [ $j == "-el" ] 
    then
      if [ $ip == G16 ] || [ -e "$iLOG" ];
      then
        
        var=`grep "SCF Done" $iLOG | tail -n 1 | awk '{print $5}'`
      elif [ $ip == ORCA ]; 
      then
        var=`grep "FINAL SINGLE POINT ENERGY" $iOUT | tail -n 1 | awk '{print $5}'`
      elif [ $ip == XTB ];
      then
        var=`grep "total E       :" $iLOG | tail -n 1 | awk '{print $4}'`
      fi        
      output+="$var "
    fi
    ###########
    ### ZPE ###
    ###########
    if [ $j == "-zpe" ] || [ $j == "-ZPE" ]
    then
      if [ $ip  == G16 ]
      then
        var=`grep "Zero-point correction=" $i | awk '{print $3}'`
      elif [ $ip == ORCA ]
      then
        var="MISSING" #TODO
      elif [ $ip == XTB ]
      then
        var=`grep "ZPVE    " $iLOG | awk '{print $2}' | sed 's/E/*10^/' | bc -l`
      fi
      output+="$var "
    fi
    #############
    ### GIBBS ###
    #############
    if [ $j == "-gibbs" ] || [ $j == "-g" ]
    then
      if [ $ip  == G16 ]
      then
        count1=`grep -c "Free Energies" $i` 
        if [ $count1 -eq 1 ]
        then
          if [ $QT -eq 1 ]
          then
            var=`$toolspath/JKgoodvibes -loc -v $factor -t $temp $i | tail -n 2 | head -n 1 | awk '{print $8}'`
          else
            var=`grep "Free Energies" $i | awk '{print $8}'`
          fi
        else 
          var="-----------"
        fi
      elif [ $ip == ORCA ] 
      then
        var="MISSING" #TODO
      elif [ $ip == XTB ]
      then
        count1=`grep -c "TOTAL FREE ENERGY" $i` 
        if [ $count1 -eq 1 ]
        then
          var=`grep "TOTAL FREE ENERGY" $i | awk '{print $1}'`
        else
          var="-----------"
        fi
      fi
      output+="$var "
    fi
    ###############
    ### GIBBS.h ###
    ###############
    if [ $j == "-gibbsh" ] || [ $j == "-gh" ]
    then
      count=`grep -c "Free Energies" $i`
      if [ $count -eq 1 ]
      then
        var=`$toolspath/JKgoodvibes -loc $i -v $factor -t $temp | tail -n 2 | head -n 1  | awk '{print $9}'`
      else
        var="-----------"
      fi
      output+="$var "
    fi
    ##################
    ### GIBBS CORR ###
    ##################
    if [ $j == "-gibbscorr" ] || [ $j == "-gcorr" ] || [ $j == "-gc" ]
    then
      count=`grep -c "Thermal correction to Gibbs Free Energy" $i`
      if [ $count -eq 1 ]
      then
        if [ $QT -eq 1 ] 
        then
          varB=`$toolspath/JKgoodvibes -loc -v $factor -t $temp $i | tail -n 2 | head -n 1`
          var2=`echo $varB  | awk '{print $3}'`
          var3=`echo $varB  | awk '{print $8}'`
          var=`echo $var3-1.0*$var2 | bc -l`
        else
          var=`grep "Thermal correction to Gibbs Free Energy" $i | awk '{print $7}'`
        fi
      else
        var="-----------"
      fi
      output+="$var "
    fi
    ####################
    ### GIBBS CORR.h ###
    ####################
    if [ $j == "-gibbscorrh" ] || [ $j == "-gcorrh" ] || [ $j == "-gch" ]
    then
      count=`grep -c "Thermal correction to Gibbs Free Energy" $i`
      if [ $count -eq 1 ]
      then
        varB=`$toolspath/JKgoodvibes -loc -v $factor -t $temp $i | tail -n 2 | head -n 1`
        var2=`echo $varB | awk '{print $3}'`
        var3=`echo $varB | awk '{print $9}'`
        var=`echo $var3-1.0*$var2 | bc -l`
      else
        var="-----------"
      fi
      output+="$var "
    fi
    ################
    ### ENTHALPY ###
    ################
    if [ $j == "-enthalpy" ] || [ $j == "-h" ]
    then
      count=`grep -c "Sum of electronic and thermal Enthalpies" $i`
      if [ $count -eq 1 ]
      then
        if [ $QT -eq 1 ]
        then
          var=`$toolspath/JKgoodvibes -loc -v $factor -t $temp $i | tail -n 2 | head -n 1 | awk '{print $5}'`
        else
          var=`grep "Sum of electronic and thermal Enthalpies" $i | awk '{print $7}'`
        fi
      else
        var="-----------"
      fi
      output+="$var "
    fi
    ######################
    ### DLPNO ENTHALPY ###
    ######################
    if [ $j == "-HD" ] || [ $j == "-hdlpno" ]
    then
      outfile=`basename $i .log`.out
      if [ -e $outfile ]
      then
        count1=`grep -c "Sum of electronic and thermal Enthalpies" $i`
        count2=`grep -c "FINAL SING" $outfile`
        if [ $count1 -eq 1 ] && [ $count2 -eq 1 ]
        then
          if [ $QT -eq 1 ]
          then
            var1=`$toolspath/JKgoodvibes -loc -v $factor -t $temp $i | tail -n 2 | head -n 1 | awk '{print $5}'`
          else
            var1=`grep "Sum of electronic and thermal Enthalpies" $i | awk '{print $7}'`
          fi
          var2=`grep "SCF Done" $i | tail -n 1 | awk '{print $5}'`
          var3=`grep 'FINAL SIN' $outfile |  awk '{print $5}'`
          var=`echo $var1-1.0*$var2+$var3 | bc -l`
        else
          var="-----------"
        fi
      else
        var="-----------"
      fi
      output+="$var "
    fi
    ###############
    ### ENTROPY ###
    ###############
    if [ $j == "-entropy" ] || [ $j == "-s" ] || [ $j == "-Us" ] || [ $j == "-Uentropy" ]
    then
      count=`grep -c "E (Thermal)             CV                S" $i`
      if [ $count -eq 1 ]
      then
        if [ $QT -eq 1 ]
        then
          var=`$toolspath/JKgoodvibes -loc $i -v $factor -t $temp | tail -n 2 | head -n 1  | awk '{print $6}'`
          var=`echo $var/$temp | bc -l`
        else
          var=`grep -C 2 "E (Thermal)             CV                S" $i | tail -n 1 | awk '{print $4}'`
          var=`echo "$var/627509" | bc -l`
        fi
        if [ $j == "-Us" ] || [ $j == "-Uentropy" ]
        then
          var=`echo "$var*627509" | bc -l`
        fi
      else
        var="-----------"
      fi
      output+="$var "
    fi
    #################
    ### ENTROPY.h ###
    #################
    if [ $j == "-entropyh" ] || [ $j == "-sh" ] || [ $j == "-Ush" ] || [ $j == "-Uentropyh" ]
    then
      count=`grep -c "E (Thermal)             CV                S" $i`
      if [ $count -eq 1 ]
      then
        var=`$toolspath/JKgoodvibes -loc $i -v $factor -t $temp | tail -n 2 | head -n 1  | awk '{print $7}'`
        var=`echo $var/$temp | bc -l`
        if [ $j == "-Ush" ] || [ $j == "-Uentropyh" ]
        then
          var=`echo "$var*627509" | bc -l`
        fi
      else
        var="-----------"
      fi
      output+="$var "
    fi
    #############
    ### DLPNO ###
    #############
    if [ $j == "-dlpno" ]
    then
      outfile=`basename $i .log`.out
      if [ -e $outfile ]
      then 
        count=`grep -c "FINAL SING" $outfile`
        if [ $count -eq 1 ]
        then
          var=`grep 'FINAL SIN' $outfile |  awk '{print $5}'`
        else
          var="-----------"
        fi
      else
        var="-----------"
      fi
      output+="$var "
    fi
    #################
    ### G + DLPNO ###
    #################
    if [ $j == "-GD" ]
    then
      outfile=`basename $i .log`.out
      if [ -e $outfile ]
      then
        count=`grep -c "FINAL SING" $outfile`
        if [ $count -eq 1 ]
        then
          var1=`grep 'FINAL SIN' $outfile |  awk '{print $5}'`
          if [ $QT -eq 1 ]
          then
            varB=`$toolspath/JKgoodvibes -loc -v $factor -t $temp $i | tail -n 2 | head -n 1`
            var2=`echo $varB  | awk '{print $3}'`
            var3=`echo $varB  | awk '{print $8}'`
            var2=`echo $var3-1.0*$var2 | bc -l`
          else
            var2=`grep "Thermal correction to Gibbs Free Energy" $i | awk '{print $7}'`
          fi
          var=`echo $var1+$var2 | bc -l`
        else
          var="-----------"
        fi
      else
        var="-----------"
      fi
      output+="$var "
    fi
    ###################
    ### G + DLPNO.h ###
    ###################
    if [ $j == "-GDh" ]
    then
      outfile=`basename $i .log`.out
      if [ -e $outfile ]
      then
        count=`grep -c "FINAL SING" $outfile`
        if [ $count -eq 1 ]
        then
          var1=`grep 'FINAL SIN' $outfile |  awk '{print $5}'`
          varB=`$toolspath/JKgoodvibes -loc -v $factor -t $temp $i | tail -n 2 | head -n 1`
          var2=`echo $varB  | awk '{print $3}'`
          var3=`echo $varB  | awk '{print $9}'`
          var=`echo $var1+$var3-1.0*$var2 | bc -l`
        else
          var="-----------"
        fi
      else
        var="-----------"
      fi
      output+="$var "
    fi
    ############
    ### TIME ###
    ############
    if [ $j == "-time" ] || [ $j == "-t" ]
    then
      timeline=`grep "Elapsed time" $i`
      tD=`echo $timeline | awk '{print $3}'`
      tH=`echo $timeline | awk '{print $5}'`
      tM=`echo $timeline | awk '{print $7}'`
      tS=`echo $timeline | awk '{print $9}'`
      var=`echo $tD*24*60+$tH*60+$tM+$tS/60 |bc -l`
      output+="$var "
    fi
    ###################
    ### RX RY RZ R2 ###
    ###################
    if [ $j == "-rx" ] || [ $j == "-ry" ] || [ $j == "-rz" ] || [ $j == "-r2" ]
    then
      rx=`grep "Rotational constants" $i | tail -n 1 | awk '{print $4}'`
      ry=`grep "Rotational constants" $i | tail -n 1 | awk '{print $5}'`
      rz=`grep "Rotational constants" $i | tail -n 1 | awk '{print $6}'`
    fi
    if [ $j == "-rx" ] 
    then
      var=$rx
      output+="$var "
    fi
    if [ $j == "-ry" ]
    then
      var=$ry
      output+="$var "
    fi
    if [ $j == "-rz" ]
    then
      var=$rz
      output+="$var "
    fi
    if [ $j == "-r2" ]
    then
      var=`echo $rx*$rx+1.0*$ry*$ry+1.0*$rz*$rz | bc -l`
      output+="$var "
    fi
    ######################
    ### POLARIZABILITY ###
    ######################
    if [ $j == "-pol" ]
    then 
      search="Dipole polarizability"
      test0=`grep -c "$search" $i`
      if [ $test0 -ge 1 ]
      then
        # in Angstrom^3
        var=`grep -C 4 "$search" $i | tail -n 1 | awk '{print $3}' | sed 's/D/E/' | awk '{print $1+0}'`
      else
        search="Exact polarizability:"
        line=`grep "$search" $i | tail -n 1`
        a11=`echo $line | awk '{print $3}'`
        a12=`echo $line | awk '{print $4}'`
        a22=`echo $line | awk '{print $5}'`
        a13=`echo $line | awk '{print $6}'`
        a23=`echo $line | awk '{print $7}'`
        a33=`echo $line | awk '{print $8}'`
        a32=$a23
        a31=$a13
        a21=$a12
        # calc eigenvalues and convert to angstrom
        echo "import numpy as np" > .JKgaussstat_help.py
        echo "import numpy.linalg as LA" >> .JKgaussstat_help.py
        echo "a=np.matrix('$a11 $a12 $a13; $a21 $a22 $a23; $a31 $a32  $a33')" >> .JKgaussstat_help.py
        #echo "print(a)""" >> .JKgaussstat_help.py
        echo "print(0.14818471147*sum(LA.eigh(a)[0])/3.)""" >> .JKgaussstat_help.py
        var=`python .JKgaussstat_help.py`
        #echo D=$a11 $a12 D=$a22 $a13 $a23 D=$a33
        #var=`echo "-1.0*$a13*$a22*$a31+1.0*$a12*$a23*$a31+1.0*$a13*$a21*$a32-1.0*$a11*$a23*$a32-1.0*$a12*$a21*$a33+1.0*$a11*$a22*$a33" | bc -l` 
	#var=`echo "$var" | awk '{ print $1^(1/3) }' | bc -l`
      fi
      output+="$var "
    fi
    ###################
    ### DX DY DZ D2 ###
    ###################
    search="Dipole moment (field-independent basis, Debye):"
    test0=`grep -c "$search" $i`
    if [ $test0 -ge 1 ]
    then
      if [ $j == "-dx" ]
      then
        var=`grep -C 1 "$search" $i | tail -n 1 | awk -v var=2 '{print $var}'`
        output+="$var "
      fi
      if [ $j == "-dy" ]
      then
        var=`grep -C 1 "$search" $i | tail -n 1 | awk -v var=4 '{print $var}'`
        output+="$var "
      fi
      if [ $j == "-dz" ]
      then
        var=`grep -C 1 "$search" $i | tail -n 1 | awk -v var=6 '{print $var}'`
        output+="$var "
      fi
      if [ $j == "-dtot" ] || [ $j == "-d" ]
      then
        var=`grep -C 1 "$search" $i | tail -n 1 | awk -v var=8 '{print $var}' | sed 's/D/E/' | awk '{print $1+0}'`
        output+="$var "
      fi
    else
      Dunits=3 # 2=au | 3=Debye | 4=10**-30 SI
      search="Electric dipole moment (dipole orientation)"
      if [ $j == "-dx" ]
      then
        var=`grep -C 4 "$search" $i | tail -n 1 | awk -v var=$Dunits '{print $var}'`
        output+="$var "
      fi
      if [ $j == "-dy" ]
      then
        var=`grep -C 5 "$search" $i | tail -n 1 | awk -v var=$Dunits '{print $var}'`
        output+="$var "
      fi
      if [ $j == "-dz" ]
      then
        var=`grep -C 6 "$search" $i | tail -n 1 | awk -v var=$Dunits '{print $var}'`
        output+="$var "
      fi
      if [ $j == "-dtot" ] || [ $j == "-d" ]
      then
        var=`grep -C 3 "$search" $i | tail -n 1 | awk -v var=$Dunits '{print $var}' | sed 's/D/E/' | awk '{print $1+0}'`
        output+="$var "
      fi
    fi
    ##########################
    ### Normal Termination ###
    ##########################
    if [ $j == "-nt" ]
    then
      var=`grep -c "Normal termination" $i`
      if [ $var -gt 0 ] 
      then
        output+="DONE$var   "
      else
        var1=`grep -c "srun: Terminating job step" $i`
        var2=`grep -c "srun: error:" $i`
        if [ $var1 -gt 0 ] || [ $var2 -gt 0 ]
        then
          output+="ERROR$var1$var2 "
        else
          output+="        "
        fi
      fi
    fi
  done
  echo -e "$output"
done
