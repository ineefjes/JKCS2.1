#!/bin/bash

### THIS IS HELP
function help {
  echo "THIS IS HELP:"
  echo "Program for that change name of file accordingly to its composition"
  echo """
  JKname [file(s).xyz]
  BEHAVIOUR
    - recognize: sa, sam, msa, gd, am, dma, p, co2, hom10, aq
    - if file.xyz exist, then create file-#.xyz, where # is increasing nnumber

  OPTIONS:
    -mol MOL NAME . predefine your molecule (MOL = atoms summary, eg.: CxOyHz)
    -log .......... use .log instead if .xyz (convert first .log to .xyz)
    OTHERS: -hom, -msa, -buoh

  EXAMPLES:
    JKname 
    JKname -log -msa
    JKname 123.xyz -mol C2H6O1 EtOH 
    JKname -log 123.log 234.log
  """
  exit
}

usermolecules=""
usermoleculesN=""
FILES=""
Qlog=0
next=0
for i in $*
do
  if [ "$i" == "-help" ] || [ "$i" == "--help" ]; then help;exit;fi
  firstletter=`echo $i | cut -c 1`
  if [ $firstletter == "-" ] || [ $next -eq 1 ]
  then
    if [ "$i" == "-hom" ]
    then
      usermolecules+=" C10O8H16" 
      usermoleculesN+=" hom"
      continue
    fi
    if [ "$i" == "-msa" ]
    then
      usermolecules+=" S1O3H1C1H3" 
      usermoleculesN+=" msa"
      continue
    fi
    if [ "$i" == "-buoh" ]
    then
      usermolecules+=" C4O1H10" 
      usermoleculesN+=" buoh"
      continue
    fi
    ###
    if [ "$i" == "-mol" ]
    then
      next=1
      last="-mol"
      continue
    fi
    if [ "$last" == "-mol" ]
    then
      last="-mol2"
      usermolecules+=" $i"
      continue
    fi
    if [ "$last" == "-mol2" ]
    then
      last=""
      next=0
      usermoleculesN+=" $i"
      continue
    fi
    ###
    if [ "$i" == "-log" ]
    then
      Qlog=1
      continue
    fi
  else
    files+=" $i"
  fi
done


###############################################################
### FUNCTIONS ####

function molcheck {
  min=""
  guessatoms=`echo $1 | sed "s/[0-9]/ /g"`  
  guessnums=` echo $1 | sed "s/[a-z]/ /g" | sed "s/[A-Z]/ /g"`  
  #check size
  countatoms=`echo $guessatoms |  xargs -n 1 |  wc -l`
  countnums=`echo  $guessnums  |  xargs -n 1 |  wc -l`
  if [ $countatoms -ne $countnums ]
  then
    echo "JKname: Wrong input: $1 [EXITING]"
    exit
  fi
  for index in `seq 1 $countatoms`
  do 
    nguessA=`echo $guessatoms | awk -v var=$index '{print $var}'`
    nguessN=`echo $guessnums  | awk -v var=$index '{print $var}'`
    eval "if [ -z \"\$$nguessA\" ]; then echo wrong innput [EXITING]; exit; fi"
    eval "nowN=\`echo \$$nguessA\`"
    maximum=`echo $nowN/$nguessN | bc`
    if [ -z "$min" ]
    then
      min=$maximum
    else
      if [ $maximum -lt $min ]
      then
        min=$maximum
      fi 
    fi
  done
  if [ -z "$min" ]
  then
    echo 0
  else 
    echo $min 
  fi
}

function removemol {
  guessatoms=`echo $1 | sed "s/[0-9]/ /g"`
  guessnums=` echo $1 | sed "s/[a-z]/ /g" | sed "s/[A-Z]/ /g"` 
  #check size
  countatoms=`echo $guessatoms |  xargs -n 1 |  wc -l`
  countnums=`echo  $guessnums  |  xargs -n 1 |  wc -l`
  if [ $countatoms -ne $countnums ]
  then
    echo "JKname: Wrong input: $1 [EXITING]"
    exit
  fi
  for index in `seq 1 $countatoms`
  do
    nguessA=`echo $guessatoms | awk -v var=$index '{print $var}'`
    nguessN=`echo $guessnums  | awk -v var=$index '{print $var}'`
    eval "nowN=\`echo \$$nguessA\`"
    newvalue=`echo $nowN-$2*$nguessN | bc`
    eval "$nguessA=$newvalue"
  done    
}

###########################################################

#checking for files input
if [ -z "$files" ]
then
  if [ $Qlog -eq 1 ]
  then 
    files=`ls *.log`
  else
    files=`ls *.xyz`
  fi
fi

#going through all files
#echo FILES = $files
for file in $files
do
  if [ $Qlog -eq 1 ]
  then
    #echo FILE = $file
    JKlog2xyz $file >> output 
    fileXYZ=`basename $file .log`.xyz
  else
    fileXYZ=`basename $file .xyz`.xyz
  fi
  
  lines=`wc -l $fileXYZ | awk '{print $1}'`
  lines=`echo $lines-2 | bc`
  atoms=`cat $fileXYZ | tail -n $lines | awk '{print $1}' | xargs`

  #initation some atoms + those in  the input file
  for i in Na Cl C N O S H
  do
    eval "$i=0"
  done 
  for i in $atoms
  do
    eval "if [ -z \"\$$i\" ]; then $i=0; fi"
    eval "$i=\`echo \$$i+1 | bc\`"
  done

  #printing summary name
  uatoms=`echo $atoms | xargs -n 1 | sort -u | xargs` 
  for i in $uatoms
  do
    eval "printf \"\$i\${$i}\""
  done
  printf " $fileXYZ"
  printf "\n"

  output="" 
  #going through some user innputs
  if [ -z "$usermolecules" ]
  then 
    size=0
  else
    size=`echo $usermolecules  | xargs -n 1 | wc -l`  
  fi
  if [ $size -gt 0 ]
  then
    for index in `seq 1 $size`
    do
      usermolecule=`echo $usermolecules | awk -v var=$index '{print $var}'`
      usermoleculeN=`echo $usermoleculesN | awk -v var=$index '{print $var}'`
      amount=`molcheck $usermolecule`
      re='^[0-9]+$'
      if ! [[ "$amount" =~ $re ]] ; then
        echo "ERROR in molecules $usermolecule (see JKname -help) [EXITING]"
        exit
      fi 
      if [ $amount -gt 0 ]
      then
        removemol $usermolecule $amount
        echo "$usermoleculeN = $amount"
        output+="$amount$usermoleculeN"
      fi
    done
  fi
  predefinedmolecules=" 10Na10Cl C4O1H10 C10O8H16 S1O3C1H4 H2S1O4 C1O2 C1N3H5 C2N1H7 N1H3 H2O1 H1"
  predefinedmoleculesN="seed     buoh    hom      msa      sa     coo  gd     dma    am   aq   p"
  size=`echo $predefinedmolecules | xargs -n 1 | wc -l`
  for index in `seq 1 $size`
  do
    predefinedmolecule=`echo $predefinedmolecules | awk -v var=$index '{print $var}'`
    predefinedmoleculeN=`echo $predefinedmoleculesN | awk -v var=$index '{print $var}'`
    amount=`molcheck $predefinedmolecule`
    re='^[0-9]+$'
    if ! [[ "$amount" =~ $re ]] ; then
      echo "ERROR in molecules $predefinedmolecule [EXITING]"
      exit
    fi 
    if [ $amount -gt 0 ]
    then
      removemol $predefinedmolecule $amount
      echo "$predefinedmoleculeN = $amount"
      output+="$amount$predefinedmoleculeN"
    fi
  done
  
  #printing the rest of files
  uatoms=`echo $atoms | xargs -n 1 | sort -u | xargs` 
  sum=0
  for i in $uatoms
  do
    eval "sum=\`echo $sum+\${$i} | bc\`"
    eval "printf \"\$i\${$i}\""
  done
  if [ $sum -ne 0 ]
  then
    printf " -- stil $sum remaining atoms (check JKname -help and use option -mol) [SKIPPING]\n"
    continue
  fi
  printf "\n"

  ## proton
  #  p=$H
  #  if [ $p -eq -1 ]
  #  then
  #    sam=1
  #    sa=`echo $sa-1 | bc`
  #    H=0
  #  else
  #    H=`echo $H-1*$p | bc`
  #  fi
 
  name=$output
  if [ "$fileXYZ" != "$name.xyz" ]
  then
    name0=$name
    num=0
    test=0
    while [ $test -eq 0 ]
    do
      if [ -e $name.log ]
      then
        num=`echo $num+1 | bc`
        name=${name0}-$num
      else
        test=1
      fi
    done
    
    
    #echo fileXYZ = $fileXYZ
    base=$(basename $fileXYZ .xyz)
    #echo BASE = $base
    for i in `ls $base.*`
    do
      #echo THIS $i
      ext=${i#*.}
      mv $base.$ext $name.$ext
    done
  fi
done

